<UserControl
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:local="clr-namespace:Module1.Views"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:prism="http://prismlibrary.com/"
             xmlns:ViewModels="clr-namespace:Module1.ViewModels" 
             x:Class="Module1.Views.M1"
             mc:Ignorable="d" 
             xmlns:lex="http://wpflocalizeextension.codeplex.com"
             lex:LocalizeDictionary.DesignCulture="ja-JP"
             lex:ResxLocalizationProvider.DefaultAssembly="CommonModels"
             lex:ResxLocalizationProvider.DefaultDictionary="Resources"
             d:DesignHeight="994.217" d:DesignWidth="922.583"
             prism:ViewModelLocator.AutoWireViewModel="True" 
             d:DataContext="{d:DesignInstance {x:Type ViewModels:M1ViewModel}}" Width="Auto" Height="Auto" >

    <Grid Background="#FFFFE7E7" Margin="0">
        <ScrollViewer Margin="5" VerticalScrollBarVisibility="Auto" HorizontalScrollBarVisibility="Auto">
            <TextBox TextWrapping="Wrap" Text="言語切り替えのライブラリー：WPFLocalizeExtension （NuGetで）&#xA;Resourcesの作成ユーティリティ：ResX Manager （機能拡張からインストール）&#xA;&#xA;下記ではCommonModelsプロジェクトのResourcesを使う&#xA;&#xA;★ViewのXAMLに下記を追加（XAML上での多言語テキストの設定に使用）&#xA;  xmlns:lex=&quot;http://wpflocalizeextension.codeplex.com&quot;&#xA;    lex:LocalizeDictionary.DesignCulture=&quot;en-US&quot;&#xA;    lex:ResxLocalizationProvider.DefaultAssembly=&quot;CommonModels&quot;&#xA;    lex:ResxLocalizationProvider.DefaultDictionary=&quot;Resources&quot;&#xA;&#xA;★CommonModelsにコードで対応言語文字列を抜き出すメソッドを記述してある&#xA;    public static T GetLocalizedValue&lt;T&gt;(string key)&#xA;    {&#xA;        //自プロジェクトのリソースを使う時&#xA;        //var temp = Assembly.GetCallingAssembly().GetName().Name + &quot;:Resources:&quot; + key;&#xA;&#xA;        //任意のプロジェクトのリソースを固定して使う時は直接書けばいい&#xA;        var temp = &quot;CommonModels:Resources:&quot; + key;&#xA;        var ret = LocExtension.GetLocalizedValue&lt;T&gt;(temp);&#xA;        return ret;&#xA;    }&#xA;&#xA;★ViewのXAMLで使用する時には&#xA;    &lt;Button Content=&quot;{lex:Loc TITLE}&quot; /&gt;&#xA;の様に Resources.resx に設定した名前を記述する&#xA;&#xA;★コードで使用する時&#xA;    string temp = CommonModules.GetLocalizedValue&lt;string&gt;(&quot;TITLE&quot;);&#xA;の様に使用する。&#xA;&#xA;★初期言語をOSの言語にするために ViewModel のコンストラクターに以下を記述した&#xA;    LocalizeDictionary.Instance.SetCurrentThreadCulture = true;&#xA;    LocalizeDictionary.Instance.Culture = new CultureInfo(System.Globalization.CultureInfo.CurrentCulture.Name);&#xA;    //OSの言語ではなく決め打ちしたい時には次のように直接設定&#xA;    //LocalizeDictionary.Instance.Culture = CultureInfo.GetCultureInfo(&quot;ja-JP&quot;);&#xA;&#xA;★組み込まれている言語の抜き出し(ObservableCollection&lt;CultureInfo&gt;)&#xA;　　LocalizeDictionary.Instance.MergedAvailableCultures&#xA;&#xA;★言語の変更&#xA;        private CultureInfo selectedCulture = LocalizeDictionary.Instance.Culture;&#xA;        /// &lt;summary&gt;&#xA;        /// コンボボックスの選択言語&#xA;        /// 変更された時に言語設定変更とその通知イベントを送る&#xA;        /// &lt;/summary&gt;&#xA;        public CultureInfo SelectedCulture&#xA;        {&#xA;            get { return selectedCulture; }&#xA;            set { SetProperty(ref selectedCulture, value);&#xA;                LocalizeDictionary.Instance.Culture = (value);&#xA;                //他のモジュールに言語が変わったことを通知&#xA;                _ea.GetEvent&lt;LanguageChangeEvent&gt;().Publish();&#xA;            }&#xA;        }&#xA;&#xA;&#xA;&#xA;" BorderThickness="0" Background="{x:Null}" IsReadOnly="True"/>
        </ScrollViewer>
        <TextBlock Text="{Binding Message}"
                       HorizontalAlignment="Right"
                       VerticalAlignment="Top" MinWidth="60" Margin="0,5,25,0" />
        <ComboBox HorizontalAlignment="Right" VerticalAlignment="Top" Width="160" Margin="0,30,25,0" ItemsSource="{Binding LangList}" DisplayMemberPath="NativeName" SelectedItem="{Binding SelectedCulture}"/>
    </Grid>
</UserControl>
